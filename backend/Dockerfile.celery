# Python base image (same as backend)
FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Set work directory
WORKDIR /app

# Create and activate virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install dependencies (can share layers with backend if built together, but separate for clarity)
COPY requirements.txt /app/
RUN pip install --upgrade pip && \
    pip install -r requirements.txt

# Download IndoBERT model and spaCy Indonesian pipeline at build time
RUN python -c "from transformers import AutoTokenizer, AutoModel; AutoTokenizer.from_pretrained('indobenchmark/indobert-base-p1'); AutoModel.from_pretrained('indobenchmark/indobert-base-p1')"
RUN python -m spacy download xx_ent_wiki_sm || true  # Download multilingual spaCy model as fallback

# Copy project
COPY . /app/

# Add health server and run script
COPY health_server.py /app/health_server.py
COPY run.sh /app/run.sh
RUN chmod +x /app/run.sh

# Ensure 'nobody' user and 'nogroup' group exist and set up basic permissions
# This is a common setup; adjust if your base image or needs are different.
RUN if ! getent group nogroup > /dev/null; then groupadd -r nogroup; fi && \
    if ! id nobody > /dev/null 2>&1; then useradd --system --no-create-home --gid nogroup -s /bin/false nobody; fi

# Command to run Celery worker and health check server
CMD ["/app/run.sh"] 